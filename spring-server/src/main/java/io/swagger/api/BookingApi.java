/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Booking;
import java.util.List;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-04-21T03:13:53.005Z")

@Api(value = "booking", description = "the booking API")
public interface BookingApi {

    @ApiOperation(value = "Cancels an existing booking", nickname = "cancelBooking", notes = "", tags={ "booking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation"),
        @ApiResponse(code = 400, message = "Invalid bookingId supplied") })
    @RequestMapping(value = "/booking/{bookingId}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> cancelBooking(@ApiParam(value = "Delete a booking using bookingId. ",required=true) @PathVariable("bookingId") String bookingId);


    @ApiOperation(value = "Create a new booking", nickname = "createBooking", notes = "To get a new taxi.", tags={ "booking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/booking",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<Void> createBooking(@ApiParam(value = "Created user object" ,required=true )  @Valid @RequestBody Booking body);


    @ApiOperation(value = "Gets a booking status by bookingId", nickname = "getBooking", notes = "", response = Booking.class, tags={ "booking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Booking.class),
        @ApiResponse(code = 400, message = "Invalid bookingId supplied") })
    @RequestMapping(value = "/booking/{bookingId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Booking> getBooking(@ApiParam(value = "The booking that needs to be fetched ",required=true) @PathVariable("bookingId") String bookingId);


    @ApiOperation(value = "Updates an existing booking", nickname = "updateBooking", notes = "", tags={ "booking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation") })
    @RequestMapping(value = "/booking",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateBooking(@ApiParam(value = "updated booking details" ,required=true )  @Valid @RequestBody List<Booking> body);

}
